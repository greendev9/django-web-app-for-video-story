upstream skigit_project {
    server skigitbackend:8000;
}

limit_req_zone $binary_remote_addr 
    zone=limitbyaddr:10m rate=1r/s;
limit_req_status 429;

server {
    server_name dev.skigit.com;

    location = /favicon.ico { access_log off; log_not_found off; }
    
    location /.well-known/acme-challenge/ {
     	root /var/www/certbot;
    }
    
    location / {
	proxy_pass http://skigit_project;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
        client_max_body_size 100M;
    }

    location /login_ajax/ {
      limit_req zone=limitbyaddr burst=10 delay=5; # set rete limit to prevent brute force attack
      proxy_pass http://skigit_project;
      proxy_set_header Host $host;
      proxy_redirect off;
      client_max_body_size 100M;
    }
 

    server_tokens   off; # to hide nginx version in header response
    
    add_header "Access-Control-Allow-Origin" "https://dev.skigit.com";
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline' blob:" always;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    add_header Set-Cookie "Path=/; HttpOnly; Secure";  # set cookies HttpOnly and Secure flags

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.skigit.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.skigit.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    ssl_protocols TLSv1.2 TLSv1.3; # disable TLSv1 TLSv1.1 and enable TLSv1.2 TLSv1.3


}

server {

    if ($host = dev.skigit.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name dev.skigit.com;
    return 404; # managed by Certbot
}
